name: Build GangstaPatch

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        choco install -y llvm
        choco install -y cmake

    - name: Get last tag number
      id: get_last_tag
      run: |
        if (-not (Test-Path .last_tag)) {
          echo "LAST_TAG=0" > .last_tag
        } else {
          echo "LAST_TAG=$(Get-Content .last_tag)" >> $env:GITHUB_ENV
        }

    - name: Configure and Build
      run: |
        git clone https://github.com/STWIY/SDK.git
        mkdir build
        cd build
        cmake -T ClangCL -A Win32 -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --config Release -j 14
   
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: GangstaPatch
        path: build/Release/GangstaPatch.asi

    - name: Increment tag number
      run: echo "NEW_TAG=$(( $env:LAST_TAG + 1 ))" >> $env:GITHUB_ENV

    - name: Delete Existing Releases
      run: |
        $token = "${{ secrets.GITHUB_TOKEN }}"
        $uri = "https://api.github.com/repos/STWIY/GangstaPatch/releases"
        $headers = @{
          "Authorization" = "token $token"
        }
        $releases = Invoke-RestMethod -Uri $uri -Headers $headers
        foreach ($release in $releases) {
          $release_id = $release.id
          Invoke-RestMethod -Uri "https://api.github.com/repos/STWIY/GangstaPatch/releases/$release_id" -Method Delete -Headers $headers
        }
      shell: pwsh
        
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.NEW_TAG }}
        release_name: GangstaPatch ${{ env.NEW_TAG }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: Release/Release/GangstaPatch.asi
        asset_name: GangstaPatch.asi
        asset_content_type: application/octet-stream

    - name: Save last tag number
      run: echo "${{ env.NEW_TAG }}" > .last_tag

name: Build GangstaPatch

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        choco install -y llvm
        choco install -y cmake

    - name: Configure and Build
      run: |
        git clone https://github.com/STWIY/SDK.git
        mkdir build
        cd build
        cmake -T ClangCL -A Win32 -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --config Release -j 14
   
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: GangstaPatch
        path: build/Release/GangstaPatch.asi
        
    - name: Determine new tag
      id: set_tag
      run: echo "::set-output name=TAG::v1.$(( $(git tag --list 'v1.*' | ForEach-Object { $_.Substring(2) } | Sort-Object -Descending | Select-Object -First 1) + 1 ))"

    - name: Delete last release
      run: |
        TAG=$(git tag --list 'v1.*' | cut -c 4- | sort -rn | head -n1)
        RELEASE_ID=$(curl -s -X GET -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/tags/v1.${TAG}" | jq -r .id)
        curl -s -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/${RELEASE_ID}"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.set_tag.outputs.TAG }}
        release_name: GangstaPatch ${{ steps.set_tag.outputs.TAG }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: Release/Release/GangstaPatch.asi
        asset_name: GangstaPatch.asi
        asset_content_type: application/octet-stream

    - name: Save last tag number
      run: echo "${{ steps.set_tag.outputs.TAG }}" > .last_tag
